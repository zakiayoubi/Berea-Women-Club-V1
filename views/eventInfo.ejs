<%- include("partials/header.ejs"); %>
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-7 col-lg-8">
            <h4 class="mb-3 text-center mt-4">Event Information</h4>
            <hr class="my-4">
            <form class="needs-validation" id="updateForm" action="/updateEventInfo/<%= event.eventid %>" method="POST">
                <div class="row g-3">
                    <div class="col-sm-6">
                        <label for="eventName" class="form-label">Event</label>
                        <input type="text" class="form-control" id="eventName" name="eventName" value="<%= event.eventname %>" required disabled>
                        <div class="invalid-feedback">
                            Valid event name is required.
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <label for="location" class="form-label">Location</label>
                        <input type="text" class="form-control" id="location" name="location" value="<%= event.eventlocation %>" required disabled>
                        <div class="invalid-feedback">
                            Valid last name is required.
                        </div>
                    </div>

                    <div class="col-12">
                        <label for="street" class="form-label">Address</label>
                        <input type="text" class="form-control" id="street" name="street" value="<%= event.streetname %>" required disabled>
                        <div class="invalid-feedback">
                            Please enter your address.
                        </div>
                    </div>
                    <div class="col-md-5">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="city" value="<%= event.city %>" required disabled>
                        <div class="invalid-feedback">
                            Valid city name is required.
                        </div>
                    </div>
                    <div class="col-md-4">
                        <label for="state" class="form-label">State</label>
                        <select class="form-select" id="state" name="state" required disabled>
                            <option value="<%= event.usstate %>"><%= event.usstate %></option>
                            <option value="Alabama">Alabama</option>
                            <option value="Alaska">Alaska</option>
                            <option value="Arizona">Arizona</option>
                            <option value="Arkansas">Arkansas</option>
                            <option value="California">California</option>
                            <option value="Colorado">Colorado</option>
                            <option value="Connecticut">Connecticut</option>
                            <option value="Delaware">Delaware</option>
                            <option value="Florida">Florida</option>
                            <option value="Georgia">Georgia</option>
                            <option value="Hawaii">Hawaii</option>
                            <option value="Idaho">Idaho</option>
                            <option value="Illinois">Illinois</option>
                            <option value="Indiana">Indiana</option>
                            <option value="Iowa">Iowa</option>
                            <option value="Kansas">Kansas</option>
                            <option value="Kentucky">Kentucky</option>
                            <option value="Louisiana">Louisiana</option>
                            <option value="Maine">Maine</option>
                            <option value="Maryland">Maryland</option>
                            <option value="Massachusetts">Massachusetts</option>
                            <option value="Michigan">Michigan</option>
                            <option value="Minnesota">Minnesota</option>
                            <option value="Mississippi">Mississippi</option>
                            <option value="Missouri">Missouri</option>
                            <option value="Montana">Montana</option>
                            <option value="Nebraska">Nebraska</option>
                            <option value="Nevada">Nevada</option>
                            <option value="New Hampshire">New Hampshire</option>
                            <option value="New Jersey">New Jersey</option>
                            <option value="New Mexico">New Mexico</option>
                            <option value="New York">New York</option>
                            <option value="North Carolina">North Carolina</option>
                            <option value="North Dakota">North Dakota</option>
                            <option value="Ohio">Ohio</option>
                            <option value="Oklahoma">Oklahoma</option>
                            <option value="Oregon">Oregon</option>
                            <option value="Pennsylvania">Pennsylvania</option>
                            <option value="Rhode Island">Rhode Island</option>
                            <option value="South Carolina">South Carolina</option>
                            <option value="South Dakota">South Dakota</option>
                            <option value="Tennessee">Tennessee</option>
                            <option value="Texas">Texas</option>
                            <option value="Utah">Utah</option>
                            <option value="Vermont">Vermont</option>
                            <option value="Virginia">Virginia</option>
                            <option value="Washington">Washington</option>
                            <option value="West Virginia">West Virginia</option>
                            <option value="Wisconsin">Wisconsin</option>
                            <option value="Wyoming">Wyoming</option>
                        </select>
                        <div class="invalid-feedback">
                            Please provide a valid state.
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label for="zip" class="form-label">Zip</label>
                        <input type="text" class="form-control" id="zip" name="zip" value="<%= event.zipcode %>" required disabled>
                        <div class="invalid-feedback">
                            Zip code required.
                        </div>
                    </div>
                    
                    <div class="col-sm-6">
                        <label for="eventDate" class="form-label">Date</label>
                        <input type="date" class="form-control date-input" id="eventDate" name="eventDate" value="<%= event.eventdate %>" required disabled>
                        <div class="invalid-feedback">
                        Please enter your date.
                        </div>
                    </div>
                    
                    <div class="col-sm-6">
                        <label for="eventType" class="form-label">Type</label>
                        <input type="text" class="form-control" id="eventType" name="eventType" value="<%= event.eventtype %>" required disabled>
                        <div class="invalid-feedback">
                        Please enter event type.
                        </div>
                    </div>

                    <div class="col-md-4 mt-3">
                        <label for="eventCost" class="form-label">Cost</label>
                        <input type="number" class="form-control" id="eventCost" name="eventCost" value="<%= event.eventcost%>" required disabled>
                        <div class="invalid-feedback">
                            Please provide the amount raised.
                        </div>
                    </div>

                    <div class="col-md-4 mt-3">
                        <label for="amountRaised" class="form-label">Amount Raised</label>
                        <input type="number" class="form-control" id="amountRaised" name="amountRaised" value="<%= event.amountraised %>" required disabled>
                        <div class="invalid-feedback">
                            Please provide the amount raised.
                        </div>
                    </div>

                    <hr class="mt-4">
                    <h4 class="mb-3 text-center">Add the members who attended this event</h4>
                    <div class="row">
                        <div class="col-6 col-md-4"> <!-- Adjust the column size as needed -->
                            <button type="button" id="toggleMemberButton" class="btn btn-primary mt-4" data-bs-toggle="modal" data-bs-target="#memberModal" disabled>Add an attendee</button>
                        </div>
                    </div>
                    <div id="selectedMembers" class="mt-4 p-3 border rounded shadow-sm" style="display: none;"></div> <!-- Container for selected members -->


                    <!-- Member Selection Modal -->
                    <div class="modal" id="memberModal" tabindex="-1" aria-labelledby="memberModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="memberModalLabel">Choose a Member <span class="fs-6 small text-body-secondary">(if you can't find a member, please add that member first)</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <input type="text" class="form-control mb-3" id="memberSearch" placeholder="Type to search...">
                                    <div class="list-group" id="memberList">
                                        <% members.forEach(member => { %>
                                            <button type="button" class="list-group-item list-group-item-action" data-value="<%= member.memberid %>"><%= member.firstname %> <%= member.lastname %></button>
                                        <% }) %>                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <button type="button" class="btn btn-primary btn-lg my-4" onclick="toggleEdit()" id="editButton">Edit Event</button>
                    <button type="submit" class="btn btn-primary btn-lg my-4" style="display:none;" id="updateButton">Save Changes</button>
                    <button type="button" class="btn btn-secondary btn-lg my-4 mx-1" onclick="cancelEdit()" style="display:none;" id="cancelButton">Cancel Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    let isEditing = false;  // This will track whether the form is in edit mode
    function toggleEdit() {
        isEditing = true;  // Set editing mode to true
        document.querySelectorAll('.badge').forEach(badge => {
            badge.classList.remove('disabled-badge');
            badge.querySelector('.btn-close').disabled = false; // Enable remove button
        });
        // Get all input and select elements within the form
        const formElements = document.querySelectorAll('#updateForm input, #updateForm select');
        formElements.forEach(element => {
            element.disabled = false; // Remove the 'disabled' attribute
        });
        
        // Hide the edit button and show the submit button
        document.getElementById('editButton').style.display = 'none';
        document.getElementById('updateButton').style.display = 'block';
        document.getElementById('cancelButton').style.display = 'block';
        document.getElementById('toggleMemberButton').disabled = false;
        enableRemoveButtons(false); // Enable all remove buttons
        }
        function enableRemoveButtons(disable) {
        document.querySelectorAll('.btn-close').forEach(button => {
            button.disabled = disable;
        });
    }
        function cancelEdit() {
            // Refresh the page
            window.location.reload();
        };

    // --------------------------------------
    document.addEventListener('DOMContentLoaded', function() {
    const attendees = <%- JSON.stringify(attendeesList) %>; // This brings in preloaded attendees
    console.log(attendees);

    const searchInput = document.getElementById('memberSearch');
    const memberList = document.getElementById('memberList');
    const selectedMembersDiv = document.getElementById('selectedMembers');
    const toggleMemberButton = document.getElementById('toggleMemberButton');
    const modalElement = document.getElementById('memberModal');
    let modal = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);
    let selectedMemberIds = new Set();  // Initialize the set for IDs

    memberList.addEventListener('click', function(event) {
    const target = event.target;
    if (target.tagName === 'BUTTON' && target.classList.contains('list-group-item-action')) {
        const memberId = target.getAttribute('data-value');
        const memberName = target.textContent;
        addMemberBadge(memberName, memberId);
        // modal.hide(); // Optionally hide the modal after selection
    }
});


    // Function to add member badges, used for both preloaded and newly selected members
    function addMemberBadge(name, memberId) {
        memberId = String(memberId);
        if (!selectedMemberIds.has(memberId)) {
            selectedMemberIds.add(memberId);

            const memberBadge = document.createElement('span');
            memberBadge.classList.add('badge', 'bg-light', 'text-black', 'border', 'border-secondary', 'd-inline-flex', 'align-items-center', 'me-2', 'mb-2');
            if (!isEditing) {  // Only add disabled class if not in editing mode
                memberBadge.classList.add('disabled-badge');
            }
            memberBadge.textContent = name;

            const removeBtn = document.createElement('button');
            removeBtn.type = 'button';
            removeBtn.className = 'btn-close ms-2 p-2';
            removeBtn.disabled = !isEditing;  // Enable the button only if in editing mode
            removeBtn.onclick = function() {
                selectedMemberIds.delete(memberId);
                memberBadge.remove();
                if (selectedMembersDiv.children.length === 0) {
                    selectedMembersDiv.style.display = 'none';
                }
            };

            memberBadge.appendChild(removeBtn);
            selectedMembersDiv.appendChild(memberBadge);
            
            // Store the selected memberId in a hidden input for form submission
            const hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'attendeeIds[]');
            hiddenInput.value = memberId;
            memberBadge.appendChild(hiddenInput);
        } else {
            console.log("Member already selected: ", name);
        }
    }


    // Prepopulate attendees from backend
    attendees.forEach(attendee => {
        addMemberBadge(attendee.name, attendee.memberid);
    });

    selectedMembersDiv.style.display = selectedMemberIds.size > 0 ? 'block' : 'none';
});


</script>
    

<%- include('partials/footer.ejs'); %>
